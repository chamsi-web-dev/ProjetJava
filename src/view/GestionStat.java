/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.esprit.entites.Statistique;
import daoLayer.StatistiqueDao;
import java.util.Iterator;
import java.util.List;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author mac
 */
public class GestionStat extends javax.swing.JFrame {
    /**
     * Creates new form JP1
     */
    JFreeChart barChart;
    ChartPanel chartPanel;
    Statistique stat;
    
    /**
     * Creates new form TableauDeBord
     */
    public GestionStat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statContent = new javax.swing.JPanel();
        experience = new javax.swing.JRadioButton();
        guide = new javax.swing.JRadioButton();
        user = new javax.swing.JRadioButton();
        panelStatistique = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        userManage = new javax.swing.JMenu();
        guideManage = new javax.swing.JMenu();
        experienceManage = new javax.swing.JMenu();
        statManage = new javax.swing.JMenu();
        rssManage = new javax.swing.JMenu();
        newsletterManage = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        statContent.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        statContent.setLayout(null);

        experience.setText("Par Expérience");
        experience.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                experienceMouseClicked(evt);
            }
        });
        experience.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                experienceActionPerformed(evt);
            }
        });
        statContent.add(experience);
        experience.setBounds(270, 40, 140, 23);

        guide.setText("Par Guides");
        guide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guideMouseClicked(evt);
            }
        });
        guide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guideActionPerformed(evt);
            }
        });
        statContent.add(guide);
        guide.setBounds(410, 40, 110, 23);

        user.setText("Par Utilisateur");
        user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userMouseClicked(evt);
            }
        });
        statContent.add(user);
        user.setBounds(520, 40, 100, 23);
        statContent.add(panelStatistique);
        panelStatistique.setBounds(50, 140, 790, 430);

        getContentPane().add(statContent, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 900, 590));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/http-www.bhutantravelshop.com-wp-content-uploads-2014-07-lt.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-26, 4, 1090, 720));

        userManage.setText("Utilisateurs");
        userManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(userManage);

        guideManage.setText("Guides");
        guideManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guideManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(guideManage);

        experienceManage.setText("Experiences");
        experienceManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                experienceManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(experienceManage);

        statManage.setText("Statistiques");
        statManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(statManage);

        rssManage.setText("Flux Rss");
        jMenuBar1.add(rssManage);

        newsletterManage.setText("Newsletter");
        jMenuBar1.add(newsletterManage);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManageMouseClicked
        // TODO add your handling code here:
            GestionUtilisateur userManage = new GestionUtilisateur();
            userManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_userManageMouseClicked

    private void guideManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guideManageMouseClicked
        // TODO add your handling code here:
            GestionGuide guideManage = new GestionGuide();
            guideManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_guideManageMouseClicked

    private void experienceManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_experienceManageMouseClicked
        // TODO add your handling code here:
            GestionExperience experienceManage = new GestionExperience();
            experienceManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_experienceManageMouseClicked

    private void guideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guideActionPerformed

    private void experienceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_experienceMouseClicked
        StatistiqueDao sDAO     = StatistiqueDao.getInstance();
        List<Statistique> lStatDisable = sDAO.getAllExperienceByStatus(0);
        List<Statistique> lStaEnable = sDAO.getAllExperienceByStatus(1);
        String status;
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for (Iterator<Statistique> statDisbale = lStatDisable.iterator(); statDisbale.hasNext();) {
            Statistique next = statDisbale.next();
            if(next.getStatus() == 0)
                status = "Activé";
            else
                status = "Désactivé";
            dataset.setValue(next.getNbr(), Integer.toString(next.getNbr()), status);
        }

        for (Iterator<Statistique> statEnable = lStaEnable.iterator(); statEnable.hasNext();) {
            Statistique next = statEnable.next();
            if(next.getStatus() == 0)
                status = "Activé";
            else
                status = "Désactivé";
            dataset.setValue(next.getNbr(), Integer.toString(next.getNbr()), status);
        }
                
       barChart = ChartFactory.createBarChart(
                        "Statistiques des expériences",
                        "Status",
                        "Nombre des expérience ",
                        dataset,
                        PlotOrientation.VERTICAL,
                        true, true, false);

                chartPanel = new ChartPanel(barChart);
                chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
                panelStatistique.removeAll();
                panelStatistique.add(chartPanel);
                panelStatistique.validate();
    }//GEN-LAST:event_experienceMouseClicked

    private void experienceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_experienceActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_experienceActionPerformed

    private void guideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guideMouseClicked
        // TODO add your handling code here:
        StatistiqueDao sDAO     = StatistiqueDao.getInstance();
        List<Statistique> lStatTunisie = sDAO.getAllGuideByCountry(1);
        List<Statistique> lStaFrance = sDAO.getAllGuideByCountry(2);
        List<Statistique> lStaSuisse = sDAO.getAllGuideByCountry(3);
        List<Statistique> lStaItalie = sDAO.getAllGuideByCountry(4);

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        //Tunisie
            for (Iterator<Statistique> statTunisie = lStatTunisie.iterator(); statTunisie.hasNext();) {
                Statistique next = statTunisie.next();
                dataset.setValue(next.getNbr(), Integer.toString(next.getNbr()), next.getNameCounrty());
            }
        
        //France
            for (Iterator<Statistique> statFrance = lStaFrance.iterator(); statFrance.hasNext();) {
                Statistique next = statFrance.next();
                dataset.setValue(next.getNbr(), Integer.toString(next.getNbr()), next.getNameCounrty());
            }
        
        //Suisse
            for (Iterator<Statistique> statSuisse = lStaSuisse.iterator(); statSuisse.hasNext();) {
                Statistique next = statSuisse.next();
                dataset.setValue(next.getNbr(), Integer.toString(next.getNbr()), next.getNameCounrty());
            }
        
        //Suisse
            for (Iterator<Statistique> statItalie = lStaItalie.iterator(); statItalie.hasNext();) {
                Statistique next = statItalie.next();
                dataset.setValue(next.getNbr(), Integer.toString(next.getNbr()), next.getNameCounrty());
            }
                
       barChart = ChartFactory.createBarChart(
                        "Statistiques des guides",
                        "Pays",
                        "Nombre des guides ",
                        dataset,
                        PlotOrientation.VERTICAL,
                        true, true, false);

                chartPanel = new ChartPanel(barChart);
                chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
                panelStatistique.removeAll();
                panelStatistique.add(chartPanel);
                panelStatistique.validate();
    }//GEN-LAST:event_guideMouseClicked

    private void statManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statManageMouseClicked
        // TODO add your handling code here:
            GestionStat statManage = new GestionStat();
            statManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_statManageMouseClicked

    private void userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMouseClicked
        // TODO add your handling code here:
            StatistiqueDao sDAO             = StatistiqueDao.getInstance();
            List<Statistique> statDisable  = sDAO.getAllCompteByStatus(0);
            List<Statistique> staEnable    = sDAO.getAllCompteByStatus(1);
            List<Statistique> staBlocked   = sDAO.getAllCompteByStatus(2);
            
            
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();

            for (Iterator<Statistique> disable = statDisable.iterator(); disable.hasNext();) {
                Statistique nextDisable = disable.next();
                String status;
                if(nextDisable.getStatus() == 1)
                    status = "Activé";
                else if(nextDisable.getStatus() == 0)
                    status = "Désactivé";
                else if(nextDisable.getStatus() == 2)
                    status = "Bloqué";
                else
                    status = "N/A";
                dataset.setValue(nextDisable.getNbr(), Integer.toString(nextDisable.getNbr()), status);
            }

            for (Iterator<Statistique> enable = staEnable.iterator(); enable.hasNext();) {
                Statistique nextEnable = enable.next();
                String status;
                if(nextEnable.getStatus() == 1)
                    status = "Activé";
                else if(nextEnable.getStatus() == 0)
                    status = "Désactivé";
                else if(nextEnable.getStatus() == 2)
                    status = "Bloqué";
                else
                    status = "N/A";
                dataset.setValue(nextEnable.getNbr(), Integer.toString(nextEnable.getNbr()), status);
            }

            for (Iterator<Statistique> blocked = staBlocked.iterator(); blocked.hasNext();) {
                Statistique nextBlocked = blocked.next();
                String status;
                if(nextBlocked.getStatus() == 1)
                    status = "Activé";
                else if(nextBlocked.getStatus() == 0)
                    status = "Désactivé";
                else if(nextBlocked.getStatus() == 2)
                    status = "Bloqué";
                else
                    status = "N/A";
                dataset.setValue(nextBlocked.getNbr(), Integer.toString(nextBlocked.getNbr()), status);
            }

           barChart = ChartFactory.createBarChart(
                            "Statistiques des utilisateurs",
                            "Status",
                            "Nombre des utilisateurs ",
                            dataset,
                            PlotOrientation.VERTICAL,
                            true, true, false);

                    chartPanel = new ChartPanel(barChart);
                    chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));
                    panelStatistique.removeAll();
                    panelStatistique.add(chartPanel);
                    panelStatistique.validate();
    }//GEN-LAST:event_userMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionStat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionStat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton experience;
    private javax.swing.JMenu experienceManage;
    private javax.swing.JRadioButton guide;
    private javax.swing.JMenu guideManage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu newsletterManage;
    private javax.swing.JPanel panelStatistique;
    private javax.swing.JMenu rssManage;
    private javax.swing.JPanel statContent;
    private javax.swing.JMenu statManage;
    private javax.swing.JRadioButton user;
    private javax.swing.JMenu userManage;
    // End of variables declaration//GEN-END:variables
}
