/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.esprit.entites.Experience;
import daoLayer.ExperienceDao;
import java.util.List;
import javax.swing.JOptionPane;
import tables.ExperienceAdapter;
import tables.GuideAdapter;

/**
 *
 * @author mac
 */
public class GestionExperience extends javax.swing.JFrame {
    public static int idExperience;
    public static String titleExperience;
    public static int decalage_horaire_experience;
    public static String start_experience;
    public static String end_experience;
    public static String season_experience;
    public static float depense_experience;
    public static int note_experience;
    public static String text_experience;
    public static String video_experience;
    public static String image_experience;
    public static String compte_experience;
    public static String country_experience;
    public static int status_experience;
    public static Experience expStatic;
    /**
     * Creates new form TableauDeBord
     */
    public GestionExperience() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnEnableUser = new javax.swing.JButton();
        btnDisableUser = new javax.swing.JButton();
        deleteExperience = new javax.swing.JButton();
        displayExperience = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        experiencesTableModel = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        userManage = new javax.swing.JMenu();
        guideManage = new javax.swing.JMenu();
        experienceManage = new javax.swing.JMenu();
        statManage = new javax.swing.JMenu();
        rssManage = new javax.swing.JMenu();
        newsletterManage = new javax.swing.JMenu();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnEnableUser.setText("Activé");
        btnEnableUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnableUserActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnableUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 80, -1));

        btnDisableUser.setText("Désactivé");
        btnDisableUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisableUserActionPerformed(evt);
            }
        });
        getContentPane().add(btnDisableUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, -1, -1));

        deleteExperience.setText("Supprimer");
        deleteExperience.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteExperienceActionPerformed(evt);
            }
        });
        getContentPane().add(deleteExperience, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, -1, -1));

        displayExperience.setText("Consulter");
        displayExperience.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayExperienceActionPerformed(evt);
            }
        });
        getContentPane().add(displayExperience, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, -1, -1));

        experiencesTableModel.setBackground(new java.awt.Color(153, 153, 153));
        experiencesTableModel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        experiencesTableModel.setForeground(new java.awt.Color(255, 255, 255));
        experiencesTableModel.setModel(new ExperienceAdapter());
        experiencesTableModel.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(experiencesTableModel);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 980, 420));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/http-www.bhutantravelshop.com-wp-content-uploads-2014-07-lt.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 520));
        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 270, 340));

        userManage.setText("Utilisateurs");
        userManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(userManage);

        guideManage.setText("Guides");
        guideManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guideManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(guideManage);

        experienceManage.setText("Experiences");
        experienceManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                experienceManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(experienceManage);

        statManage.setText("Statistiques");
        statManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(statManage);

        rssManage.setText("Flux Rss");
        rssManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rssManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(rssManage);

        newsletterManage.setText("Newsletter");
        newsletterManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newsletterManageMouseClicked(evt);
            }
        });
        jMenuBar1.add(newsletterManage);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManageMouseClicked
        // TODO add your handling code here:
            GestionUtilisateur userManage = new GestionUtilisateur();
            userManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_userManageMouseClicked

    private void btnEnableUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnableUserActionPerformed
        // TODO add your handling code here:

        if(experiencesTableModel.getSelectedRow() != -1){
            ExperienceDao cDao = ExperienceDao.getInstance();
            ExperienceAdapter experienceAdapter = new ExperienceAdapter();
            List<Experience> listExperience = experienceAdapter.getExperiences();
            Experience tmpExperience = listExperience.get(experiencesTableModel.getSelectedRow());
            cDao.disableExperience(tmpExperience.getId_experience(), true);
            experiencesTableModel.setModel(new ExperienceAdapter());

        }
    }//GEN-LAST:event_btnEnableUserActionPerformed

    private void btnDisableUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisableUserActionPerformed
        // TODO add your handling code here:
        if(experiencesTableModel.getSelectedRow() != -1){
            ExperienceDao cDao = ExperienceDao.getInstance();
            ExperienceAdapter experienceAdapter = new ExperienceAdapter();
            List<Experience> listExperience = experienceAdapter.getExperiences();
            Experience tmpExperience = listExperience.get(experiencesTableModel.getSelectedRow());
            cDao.disableExperience(tmpExperience.getId_experience(), false);
            experiencesTableModel.setModel(new ExperienceAdapter());
        }
    }//GEN-LAST:event_btnDisableUserActionPerformed

    private void deleteExperienceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteExperienceActionPerformed
        // TODO add your handling code here:
        if(experiencesTableModel.getSelectedRow() != -1){
               ExperienceDao experienceDao               = ExperienceDao.getInstance();
               ExperienceAdapter experiencesAdapter  = new ExperienceAdapter();
               List<Experience> listExperience       = experiencesAdapter.getExperiences();
               Experience tmpExperience              = listExperience.get(experiencesTableModel.getSelectedRow());
               experienceDao.deleteEntity(tmpExperience);
                
               JOptionPane jop = new JOptionPane();

                if(experienceDao.deleteEntity(tmpExperience)){
                    jop.showMessageDialog(null, "Suppression de "+tmpExperience.getTitle_experience()+" avec sucess", "Sucess", JOptionPane.ERROR_MESSAGE);
                }
               experiencesTableModel.setModel(new GuideAdapter());
            }
    }//GEN-LAST:event_deleteExperienceActionPerformed

    private void displayExperienceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayExperienceActionPerformed
        // TODO add your handling code here:
         if(experiencesTableModel.getSelectedRow() != -1){
            ExperienceDao experienceDao               = ExperienceDao.getInstance();
            ExperienceAdapter experiencesAdapter  = new ExperienceAdapter();
            List<Experience> listExperience       = experiencesAdapter.getExperiences();
            Experience tmpExperience              = listExperience.get(experiencesTableModel.getSelectedRow());
            
            //Get description text
                String description_experience   = experienceDao.getTextById(tmpExperience.getId_text());
            //Get country by id 
                String countryExperience       = experienceDao.getCountryById(tmpExperience.getId_country());
            //Get Video by id 
                String videoExperience         = experienceDao.getVideoById(tmpExperience.getId_video());
            //Get Image by id 
                String imgExperience         = experienceDao.getImageById(tmpExperience.getId_video());
            //Get Compte by id 
                String compteExperience         = experienceDao.getCompteById(tmpExperience.getId_compte());
                
            //Static variable to another Jframe window
                expStatic                   = tmpExperience;
                idExperience                = tmpExperience.getId_experience();
                titleExperience             = tmpExperience.getTitle_experience();
                decalage_horaire_experience = tmpExperience.getDecalage_horaire_experience();
                start_experience            = tmpExperience.getStart_experience();
                end_experience              = tmpExperience.getEnd_experience();
                season_experience           = tmpExperience.getSeason_experience();
                depense_experience          = tmpExperience.getDepense_experience();
                note_experience             = tmpExperience.getNote_experience();
                text_experience             = description_experience;
                video_experience            = videoExperience;
                image_experience            = imgExperience;
                compte_experience           = compteExperience;
                country_experience          = countryExperience;
                status_experience           = tmpExperience.getStatus_experience();

            ConsulterExperience voirExperience    =  new ConsulterExperience();
            voirExperience.setVisible(true);
            this.setVisible(false);
         }
    }//GEN-LAST:event_displayExperienceActionPerformed

    private void guideManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guideManageMouseClicked
        // TODO add your handling code here:
            GestionGuide guideManage = new GestionGuide();
            guideManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_guideManageMouseClicked

    private void experienceManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_experienceManageMouseClicked
        // TODO add your handling code here:
            GestionExperience experienceManage = new GestionExperience();
            experienceManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_experienceManageMouseClicked

    private void statManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statManageMouseClicked
        // TODO add your handling code here:
            GestionStat statManage = new GestionStat();
            statManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_statManageMouseClicked

    private void rssManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rssManageMouseClicked
        // TODO add your handling code here:
            GestionFlux rssManage = new GestionFlux();
            rssManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_rssManageMouseClicked

    private void newsletterManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newsletterManageMouseClicked
        // TODO add your handling code here:
            GestionNewsletter newsletterManage = new GestionNewsletter();
            newsletterManage.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_newsletterManageMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionExperience.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionExperience.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionExperience.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionExperience.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionExperience().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisableUser;
    private javax.swing.JButton btnEnableUser;
    private javax.swing.JButton deleteExperience;
    private javax.swing.JButton displayExperience;
    private javax.swing.JMenu experienceManage;
    private javax.swing.JTable experiencesTableModel;
    private javax.swing.JMenu guideManage;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenu newsletterManage;
    private javax.swing.JMenu rssManage;
    private javax.swing.JMenu statManage;
    private javax.swing.JMenu userManage;
    // End of variables declaration//GEN-END:variables
}
